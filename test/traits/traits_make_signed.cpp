#include <core/traits/make_signed.h>

namespace hud_test
{
    enum class a;
    enum class b_char : char;
    enum class b_const_char : const char;
    enum class b_volatile_char : volatile char;
    enum class b_const_volatile_char : const volatile char;
    enum class c : signed char;
    enum class d : short;
    enum class e : int;
    enum class f : long;
    enum class g : long long;
    enum class h : unsigned char;
    enum class i : unsigned short;
    enum class j : unsigned int;
    enum class k : unsigned long;
    enum class l : unsigned long long;
    enum class m : wchar_t;
    enum class n : char16_t;
    enum class o : char32_t;
    enum class p : char8_t;

    enum class q : i8;
    enum class r : i16;
    enum class s : i32;
    enum class t : i64;
    enum class u : u8;
    enum class v : u16;
    enum class w : u32;
    enum class x : u64;
    enum class y : char8;
    enum class z : wchar;
    enum class a_1 : char16;
    enum class b_1 : char32;
    enum class c_1 : iptr;
    enum class d_1 : uptr;
    enum class e_1 : usize;
} // namespace hud_test

GTEST_TEST(traits, make_signed)
{
    hud_assert_true((hud::is_same_v<hud::make_signed_t<char>, signed char>));
    hud_assert_true((hud::is_same_v<hud::make_signed_t<signed char>, signed char>));
    hud_assert_true((hud::is_same_v<hud::make_signed_t<short>, signed short>));
    hud_assert_true((hud::is_same_v<hud::make_signed_t<int>, signed int>));
    hud_assert_true((hud::is_same_v<hud::make_signed_t<long>, signed long>));
    hud_assert_true((hud::is_same_v<hud::make_signed_t<long long>, signed long long>));
    hud_assert_true((hud::is_same_v<hud::make_signed_t<const char>, const signed char>));
    hud_assert_true((hud::is_same_v<hud::make_signed_t<const signed char>, const signed char>));
    hud_assert_true((hud::is_same_v<hud::make_signed_t<const short>, const signed short>));
    hud_assert_true((hud::is_same_v<hud::make_signed_t<const int>, const signed int>));
    hud_assert_true((hud::is_same_v<hud::make_signed_t<const long>, const signed long>));
    hud_assert_true((hud::is_same_v<hud::make_signed_t<const long long>, const signed long long>));
    hud_assert_true((hud::is_same_v<hud::make_signed_t<volatile char>, volatile signed char>));
    hud_assert_true((hud::is_same_v<hud::make_signed_t<volatile signed char>, volatile signed char>));
    hud_assert_true((hud::is_same_v<hud::make_signed_t<volatile short>, volatile signed short>));
    hud_assert_true((hud::is_same_v<hud::make_signed_t<volatile int>, volatile signed int>));
    hud_assert_true((hud::is_same_v<hud::make_signed_t<volatile long>, volatile signed long>));
    hud_assert_true((hud::is_same_v<hud::make_signed_t<volatile long long>, volatile signed long long>));
    hud_assert_true((hud::is_same_v<hud::make_signed_t<const volatile char>, const volatile signed char>));
    hud_assert_true((hud::is_same_v<hud::make_signed_t<const volatile signed char>, const volatile signed char>));
    hud_assert_true((hud::is_same_v<hud::make_signed_t<const volatile short>, const volatile signed short>));
    hud_assert_true((hud::is_same_v<hud::make_signed_t<const volatile int>, const volatile signed int>));
    hud_assert_true((hud::is_same_v<hud::make_signed_t<const volatile long>, const volatile signed long>));
    hud_assert_true((hud::is_same_v<hud::make_signed_t<const volatile long long>, const volatile signed long long>));

    hud_assert_true((hud::is_same_v<hud::make_signed_t<unsigned char>, signed char>));
    hud_assert_true((hud::is_same_v<hud::make_signed_t<unsigned short>, signed short>));
    hud_assert_true((hud::is_same_v<hud::make_signed_t<unsigned int>, signed int>));
    hud_assert_true((hud::is_same_v<hud::make_signed_t<unsigned long>, signed long>));
    hud_assert_true((hud::is_same_v<hud::make_signed_t<unsigned long long>, signed long long>));
    hud_assert_true((hud::is_same_v<hud::make_signed_t<const unsigned char>, const signed char>));
    hud_assert_true((hud::is_same_v<hud::make_signed_t<const unsigned short>, const signed short>));
    hud_assert_true((hud::is_same_v<hud::make_signed_t<const unsigned int>, const signed int>));
    hud_assert_true((hud::is_same_v<hud::make_signed_t<const unsigned long>, const signed long>));
    hud_assert_true((hud::is_same_v<hud::make_signed_t<const unsigned long long>, const signed long long>));
    hud_assert_true((hud::is_same_v<hud::make_signed_t<volatile unsigned char>, volatile signed char>));
    hud_assert_true((hud::is_same_v<hud::make_signed_t<volatile unsigned short>, volatile signed short>));
    hud_assert_true((hud::is_same_v<hud::make_signed_t<volatile unsigned int>, volatile signed int>));
    hud_assert_true((hud::is_same_v<hud::make_signed_t<volatile unsigned long>, volatile signed long>));
    hud_assert_true((hud::is_same_v<hud::make_signed_t<volatile unsigned long long>, volatile signed long long>));
    hud_assert_true((hud::is_same_v<hud::make_signed_t<const volatile unsigned char>, const volatile signed char>));
    hud_assert_true((hud::is_same_v<hud::make_signed_t<const volatile unsigned short>, const volatile signed short>));
    hud_assert_true((hud::is_same_v<hud::make_signed_t<const volatile unsigned int>, const volatile signed int>));
    hud_assert_true((hud::is_same_v<hud::make_signed_t<const volatile unsigned long>, const volatile signed long>));
    hud_assert_true((hud::is_same_v<hud::make_signed_t<const volatile unsigned long long>, const volatile signed long long>));

    hud_assert_true((hud::is_same_v<hud::make_signed_t<i8>, signed char>));
    hud_assert_true((hud::is_same_v<hud::make_signed_t<i16>, i16>));
    hud_assert_true((hud::is_same_v<hud::make_signed_t<i32>, i32>));
    hud_assert_true((hud::is_same_v<hud::make_signed_t<i64>, i64>));
    hud_assert_true((hud::is_same_v<hud::make_signed_t<u8>, signed char>));
    hud_assert_true((hud::is_same_v<hud::make_signed_t<u16>, i16>));
    hud_assert_true((hud::is_same_v<hud::make_signed_t<u32>, i32>));
    hud_assert_true((hud::is_same_v<hud::make_signed_t<u64>, i64>));
    hud_assert_true((hud::is_same_v<hud::make_signed_t<char8>, signed char>));
    hud_assert_true((hud::is_same_v<hud::make_signed_t<wchar>, hud::conditional_t<sizeof(wchar) == 2, i16, i32>>));
    hud_assert_true((hud::is_same_v<hud::make_signed_t<char16>, i16>));
    hud_assert_true((hud::is_same_v<hud::make_signed_t<char32>, i32>));
    hud_assert_true((hud::is_same_v<hud::make_signed_t<iptr>, iptr>));
    hud_assert_true((hud::is_same_v<hud::make_signed_t<uptr>, iptr>));
    hud_assert_true((hud::is_same_v<hud::make_signed_t<usize>, hud::conditional_t<sizeof(void *) == 4, i32, i64>>));

    hud_assert_true((hud::is_same_v<hud::make_signed_t<hud_test::a>, signed int>));
    hud_assert_true((hud::is_same_v<hud::make_signed_t<hud_test::b_char>, signed char>));
    hud_assert_true((hud::is_same_v<hud::make_signed_t<hud_test::b_const_char>, signed char>));
    hud_assert_true((hud::is_same_v<hud::make_signed_t<hud_test::b_volatile_char>, signed char>));
    hud_assert_true((hud::is_same_v<hud::make_signed_t<hud_test::b_const_volatile_char>, signed char>));
    hud_assert_true((hud::is_same_v<hud::make_signed_t<hud_test::c>, signed char>));
    hud_assert_true((hud::is_same_v<hud::make_signed_t<hud_test::d>, signed short>));
    hud_assert_true((hud::is_same_v<hud::make_signed_t<hud_test::e>, signed int>));
    hud_assert_true((hud::is_same_v<hud::make_signed_t<hud_test::f>, signed long>));
    hud_assert_true((hud::is_same_v<hud::make_signed_t<hud_test::g>, signed long long>));
    hud_assert_true((hud::is_same_v<hud::make_signed_t<hud_test::h>, signed char>));
    hud_assert_true((hud::is_same_v<hud::make_signed_t<hud_test::i>, signed short>));
    hud_assert_true((hud::is_same_v<hud::make_signed_t<hud_test::j>, signed int>));
    hud_assert_true((hud::is_same_v<hud::make_signed_t<hud_test::k>, signed long>));
    hud_assert_true((hud::is_same_v<hud::make_signed_t<hud_test::l>, signed long long>));
    hud_assert_true((hud::is_same_v<hud::make_signed_t<hud_test::m>, hud::conditional_t<sizeof(wchar_t) == 2, signed short, signed int>>));
    hud_assert_true((hud::is_same_v<hud::make_signed_t<hud_test::n>, signed short>));
    hud_assert_true((hud::is_same_v<hud::make_signed_t<hud_test::o>, signed int>));
    hud_assert_true((hud::is_same_v<hud::make_signed_t<hud_test::p>, signed char>));
    hud_assert_true((hud::is_same_v<hud::make_signed_t<hud_test::q>, signed char>));
    hud_assert_true((hud::is_same_v<hud::make_signed_t<hud_test::r>, i16>));
    hud_assert_true((hud::is_same_v<hud::make_signed_t<hud_test::s>, i32>));
    hud_assert_true((hud::is_same_v<hud::make_signed_t<hud_test::t>, i64>));
    hud_assert_true((hud::is_same_v<hud::make_signed_t<hud_test::u>, signed char>));
    hud_assert_true((hud::is_same_v<hud::make_signed_t<hud_test::v>, i16>));
    hud_assert_true((hud::is_same_v<hud::make_signed_t<hud_test::w>, i32>));
    hud_assert_true((hud::is_same_v<hud::make_signed_t<hud_test::x>, i64>));
    hud_assert_true((hud::is_same_v<hud::make_signed_t<hud_test::y>, signed char>));
    hud_assert_true((hud::is_same_v<hud::make_signed_t<hud_test::z>, hud::conditional_t<sizeof(wchar) == 2, i16, i32>>));
    hud_assert_true((hud::is_same_v<hud::make_signed_t<hud_test::a_1>, i16>));
    hud_assert_true((hud::is_same_v<hud::make_signed_t<hud_test::b_1>, i32>));
    hud_assert_true((hud::is_same_v<hud::make_signed_t<hud_test::c_1>, iptr>));
    hud_assert_true((hud::is_same_v<hud::make_signed_t<hud_test::d_1>, hud::conditional_t<sizeof(void *) == 4, i32, i64>>));
    hud_assert_true((hud::is_same_v<hud::make_signed_t<hud_test::e_1>, hud::conditional_t<sizeof(void *) == 4, i32, i64>>));
}
